# header_adder_XMA.bms
# Add XMA1 RIFF header to headerless XMA1 stream (decodable with toWAV)
#
# If the headerless stream has the format NAME@FREQ[m/s] (e.g. track01@44100s),
# the script automatically takes the given values from the name.
# If the headerless stream has the format NAME@FREQ, func_header_XMA.bms
# will detect the channel count.
# Remember to try parsing the stream to XMA1 before adding a header.
#
# (c) 2012-03-26 by AlphaTwentyThree of XeNTaX

include "func_header_XMA.bms"
include "func_str2num.bms"

set FREQ_DEFAULT 44100
set CH_DEFAULT 2
set OFFSET 0x0
callfunction getfreqch 1
if FREQ == 0
   set FREQ FREQ_DEFAULT
   print "No frequency given.\nDefault frequency is %FREQ%Hz."
endif
if CH == 0
   set CH CH_DEFAULT
   print "Number of channels could not be determined.\nDefault is %CH% channels."
endif

get SIZE asize
math SIZE -= OFFSET
callfunction XMA 1
set NAME NAME_BASE # see function getfreq
string NAME += ".xma"
get SIZE asize MEMORY_FILE
log NAME 0 SIZE MEMORY_FILE


startfunction getfreqch # internal use only
   get NAME basename # search for freq and ch in file name via "@" identifier
   strlen NAMEL NAME
   set EXISTS 0
   for i = 0 < NAMEL # write name to memory
      getVarChr T NAME i
      if T == 0x40
         set EXISTS 1
      endif
      putVarChr MEMORY_FILE i T
   next i
   if EXISTS == 1 # freq info given
      getCT NAME_BASE string 0x40 MEMORY_FILE
      strlen NAMEBL NAME_BASE
      math NAMEBL += 1 # start of stream info in name
      set LENGTH NAMEL
      math LENGTH -= NAMEBL # length of string behind @
      set CH_OFF NAMEL
      math CH_OFF -= 1
      getVarChr CHANNELS NAME CH_OFF
      if CHANNELS < 0x40 # no channel count given -> determine channels
         callfunction getCH 1
      else # use channel count from file name
         math LENGTH -= 1
         if CHANNELS == 0x6d
            set CH 1
         elif CHANNELS == 0x73
            set CH 2
         endif
      endif
      goto NAMEBL MEMORY_FILE
      getDstring NUM LENGTH MEMORY_FILE # get freq as string
      callfunction str2num 1 # convert to integer
      set FREQ NUM
   else
      set FREQ 0
      callfunction getCH 1
      get NAME_BASE basename
   endif
endfunction